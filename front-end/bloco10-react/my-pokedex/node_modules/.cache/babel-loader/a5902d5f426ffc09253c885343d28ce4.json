{"ast":null,"code":"var _jsxFileName = \"/home/ricardo/Documentos/trybe-aula/front-end/bloco10-react/my-pokedex/src/components/Pokemon.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Pokemon extends React.Component {\n  render() {\n    const {\n      pokemon: {\n        name,\n        type,\n        averageWeight,\n        image\n      }\n    } = this.props; // Fizemos um map no nosso array de pokemons\n    // que vai renderizar o componente Pokemon para cada item do array.\n    // Então, recebemos a props \"pokemon\" que é um objeto do array de pokemons\n    // Nesses objetos temos informações como name, type e etc, então\n    // desestruturamos essas informações e renderizamos em uma tag HTML,\n    // no caso, utilizamos um <p>.\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Average weight: ${averageWeight.value} ${averageWeight.measurementUnit}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `${name} sprite`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPokemon.propTypes = {\n  pokemon: PropTypes.shape({\n    name: PropTypes.string,\n    type: PropTypes.string,\n    averageWeight: PropTypes.shape({\n      measurementUnit: PropTypes.string,\n      value: PropTypes.number\n    }),\n    image: PropTypes.string\n  }).isRequired\n};\nexport default Pokemon;","map":{"version":3,"names":["React","PropTypes","Pokemon","Component","render","pokemon","name","type","averageWeight","image","props","value","measurementUnit","propTypes","shape","string","number","isRequired"],"sources":["/home/ricardo/Documentos/trybe-aula/front-end/bloco10-react/my-pokedex/src/components/Pokemon.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Pokemon extends React.Component {\n  render() {\n    const { pokemon: { name, type, averageWeight, image } } = this.props;\n    // Fizemos um map no nosso array de pokemons\n    // que vai renderizar o componente Pokemon para cada item do array.\n    // Então, recebemos a props \"pokemon\" que é um objeto do array de pokemons\n    // Nesses objetos temos informações como name, type e etc, então\n    // desestruturamos essas informações e renderizamos em uma tag HTML,\n    // no caso, utilizamos um <p>.\n\n    return (\n      <div className=\"pokemon\">\n        <div>\n          <p>{ name }</p>\n          <p>{ type }</p>\n          <p>\n            {`Average weight: ${averageWeight.value} ${averageWeight.measurementUnit}`}\n          </p>\n        </div>\n        <img src={ image } alt={ `${name} sprite` } />\n      </div>\n    );\n  }\n}\n\nPokemon.propTypes = {\n  pokemon: PropTypes.shape({\n    name: PropTypes.string,\n    type: PropTypes.string,\n    averageWeight: PropTypes.shape({\n      measurementUnit: PropTypes.string,\n      value: PropTypes.number,\n    }),\n    image: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Pokemon;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;EACpCC,MAAM,GAAG;IACP,MAAM;MAAEC,OAAO,EAAE;QAAEC,IAAF;QAAQC,IAAR;QAAcC,aAAd;QAA6BC;MAA7B;IAAX,IAAoD,KAAKC,KAA/D,CADO,CAEP;IACA;IACA;IACA;IACA;IACA;;IAEA,oBACE;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QAAA,wBACE;UAAA,UAAKJ;QAAL;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,UAAKC;QAAL;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,UACI,mBAAkBC,aAAa,CAACG,KAAM,IAAGH,aAAa,CAACI,eAAgB;QAD3E;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QAAK,GAAG,EAAGH,KAAX;QAAmB,GAAG,EAAI,GAAEH,IAAK;MAAjC;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAYD;;AAtBmC;;AAyBtCJ,OAAO,CAACW,SAAR,GAAoB;EAClBR,OAAO,EAAEJ,SAAS,CAACa,KAAV,CAAgB;IACvBR,IAAI,EAAEL,SAAS,CAACc,MADO;IAEvBR,IAAI,EAAEN,SAAS,CAACc,MAFO;IAGvBP,aAAa,EAAEP,SAAS,CAACa,KAAV,CAAgB;MAC7BF,eAAe,EAAEX,SAAS,CAACc,MADE;MAE7BJ,KAAK,EAAEV,SAAS,CAACe;IAFY,CAAhB,CAHQ;IAOvBP,KAAK,EAAER,SAAS,CAACc;EAPM,CAAhB,EAQNE;AATe,CAApB;AAYA,eAAef,OAAf"},"metadata":{},"sourceType":"module"}